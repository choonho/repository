name: SpaceONE CI

on:
  pull_request:
    branches:
      - master
jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set environment virables
      env:
        SERVICE: repository
        
        PYPI_UPLOAD: true # upload pypi if this is true
        # LOCATION points the parent directory
        LOCATION_SETUP_PY: src # optional. for pypi upload
        LOCATION_VERSION: src # the location for VERSION file (ex- . means the location of VERSION is ./VERSION)
        IS_SUDO: false
      run: |
        echo "::set-env name=SERVICE::$SERVICE"
        echo "::set-env name=PYPI_UPLOAD::$PYPI_UPLOAD"
        echo "::set-env name=LOCATION_SETUP_PY::$LOCATION_SETUP_PY"
        echo "::set-env name=LOCATION_VERSION::$LOCATION_VERSION"
        echo "::set-env name=IS_SUDO::$IS_SUDO"
    - name: Clone master branch
      uses: actions/checkout@v2
      with:
        ref: master
        path: master_branch
    - name: Compare version
      run: |
        echo "MASTER BRANCH VERSION"
        cat master_branch/$LOCATION_VERSION/VERSION
        echo -e "\n\n"

        echo "PR VERSION"
        cat $LOCATION_VERSION/VERSION
        echo -e "\n\n"

        echo "::set-env name=IS_NEW_VERSION::false"
        cmp --silent master_branch/$LOCATION_VERSION/VERSION $LOCATION_VERSION/VERSION || \
        echo "::set-env name=IS_NEW_VERSION::true"

        echo "$(cat $LOCATION_VERSION/VERSION)-${{ github.run_id }}">$LOCATION_VERSION/VERSION

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        if [ $IS_SUDO = true ]
          then
            sudo python -m pip install --upgrade pip
            sudo pip install setuptools wheel twine
          else
            python -m pip install --upgrade pip
            pip install setuptools wheel twine
        fi
    - name: Build
      run: |
        if test -f "Makefile"; then
          make all
        fi
        cd $LOCATION_SETUP_PY
        if [ $IS_SUDO = true ]
          then
            sudo python setup.py sdist bdist_wheel
          else
            python setup.py sdist bdist_wheel
        fi
    - name: Test
      id: test
      run: |
        echo "Running test ... None"
        # fail test or pass test
    - name: Upload Pypi
      id: upload
      if: env.PYPI_UPLOAD == 'true'
      run: |
        cd $LOCATION_SETUP_PY
        if [ $IS_SUDO = true ]
          then
            sudo twine upload dist/*.whl --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }} --verbose
          else
            twine upload dist/*.whl --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }} --verbose
        fi
      continue-on-error: true

    - name: Merge branch automatically
      if: steps.test.outcome == 'success'
      uses: pascalgn/automerge-action@v0.8.3
      env:
        # repository token으로는 새로운 workflow run시킬 수 없음.
        GITHUB_TOKEN: ${{secrets.REPOSITORY_ACCESS_KEY}}
        #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
        MERGE_LABELS: ""

    - name: Notify to slack
      if: always() # Pick up events even if the job fails or is canceled.
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        author_name: "[BOT]"
        fields: repo,message,commit,author,action,eventName,ref,workflow # selectable (default: repo,message)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # optional
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
